# -*- coding: utf-8 -*-
"""EDA Part.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19425MTUDMLxMDY0W41oaGcCKwRE1kYZ-

### ***EDA*** ###
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import files

uploaded = files.upload()

merged_data = pd.read_csv('merged_dataset.csv')

merged_data.head()

merged_data.isna().sum()

missing_city_state = merged_data.loc[merged_data['merchant_state'].isna(), ['merchant_city', 'merchant_state']]
missing_city_state

merged_data.columns

merged_data.drop(['Unnamed: 0','merchant_name','retirement_age','longitude','latitude','birth_year','birth_month','address','id_card','client_id_card','expires','Details'],axis = 1 ,inplace=True)

merged_data.head(3)

merged_data['date'] = pd.to_datetime(merged_data['date'], errors='coerce')

merged_data.head(3)

merged_data['amount'] = merged_data['amount'].str.replace('[\$,()"]', '', regex=True)

merged_data.drop('merchant_state',axis = 1,inplace = True)

merged_data.drop(['acct_open_date','year_pin_last_changed'],axis=1,inplace=True)

merged_data.drop('mcc',axis=1,inplace=True)

merged_data.drop(['cvv','card_number'],axis=1,inplace=True)

merged_data.head()

merged_data.info()

merged_data.isna().sum()

merged_data = merged_data.rename(columns={'merchant_city': 'merchant_state'})

merged_data['merchant_state'] = merged_data['merchant_state'].astype(str)
merged_data.loc[merged_data['merchant_state'].str.contains("bound method", na=False), 'merchant_state'] = None

merged_data['merchant_state'] = merged_data['merchant_state'].fillna(merged_data['merchant_state'].mode()[0])

merged_data.merchant_state

merged_data.Is_fraud

merged_data['Is_fraud'] = merged_data['Is_fraud'].fillna('Yes')

merged_data.head()

merged_data.describe()

merged_data.columns

merged_data['use_chip'] = merged_data['use_chip'].replace({'153.61 "': 'Chip Transaction'})

merged_data.use_chip.value_counts()

merged_data.use_chip.value_counts().plot.pie()

merged_data.card_brand.value_counts()

merged_data.card_brand.value_counts().plot.bar()

merged_data.card_type.value_counts()

merged_data.card_type.value_counts().plot.pie()

merged_data.card_on_dark_web.value_counts()

merged_data.drop('card_on_dark_web',axis=1,inplace=True)

merged_data.drop('id',axis=1,inplace=True)

merged_data = merged_data.rename(columns={'current_age': 'user_age'})

merged_data = merged_data.rename(columns={'client_id': 'user_id'})

merged_data.head()

merged_data.columns

plt.figure(figsize=(8,5))
sns.histplot(data=merged_data, x="user_age", hue="Is_fraud", multiple="stack", bins=30)
plt.title("Fraud by Age Distribution")
plt.show()

plt.figure(figsize=(10,10))
sns.countplot(data=merged_data, x="use_chip", hue="Is_fraud")
plt.title("Fraud by Transaction Type")
plt.show()

merged_data.to_csv('final data.csv')

